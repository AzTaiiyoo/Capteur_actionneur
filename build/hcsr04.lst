ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"hcsr04.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Src/module/hcsr04.c"
  20              		.section	.text.HC_SR04_get_instance,"ax",%progbits
  21              		.align	1
  22              		.global	HC_SR04_get_instance
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HC_SR04_get_instance:
  28              	.LFB137:
   1:Src/module/hcsr04.c **** 
   2:Src/module/hcsr04.c **** /**
   3:Src/module/hcsr04.c ****  * @file hcsr04.c
   4:Src/module/hcsr04.c ****  * @brief Implémentation des fonctions pour le capteur ultrasonique HC-SR04
   5:Src/module/hcsr04.c ****  */
   6:Src/module/hcsr04.c **** 
   7:Src/module/hcsr04.c ****  #include "hcsr04.h"
   8:Src/module/hcsr04.c ****  #include "gpio.h"
   9:Src/module/hcsr04.c ****  #include "tim.h"
  10:Src/module/hcsr04.c ****  #include <stdio.h>
  11:Src/module/hcsr04.c ****  #include <stdint.h>
  12:Src/module/hcsr04.c ****  #include "tim.h"
  13:Src/module/hcsr04.c ****  #include "usart_comm.h"
  14:Src/module/hcsr04.c ****  
  15:Src/module/hcsr04.c ****  /**
  16:Src/module/hcsr04.c ****   * @brief Instance statique du capteur HC-SR04 (singleton)
  17:Src/module/hcsr04.c ****   */
  18:Src/module/hcsr04.c ****  static HC_SR04 sensor_instance = {0};
  19:Src/module/hcsr04.c ****  
  20:Src/module/hcsr04.c ****  /**
  21:Src/module/hcsr04.c ****   * @brief Récupère l'instance du capteur HC-SR04 (Singleton)
  22:Src/module/hcsr04.c ****   * @return Pointeur vers l'instance unique du capteur HC-SR04
  23:Src/module/hcsr04.c ****   */
  24:Src/module/hcsr04.c ****  HC_SR04* HC_SR04_get_instance(void) {
  29              		.loc 1 24 38 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  25:Src/module/hcsr04.c ****      return &sensor_instance;
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 2


  34              		.loc 1 25 6 view .LVU1
  26:Src/module/hcsr04.c ****  }
  35              		.loc 1 26 2 is_stmt 0 view .LVU2
  36 0000 0048     		ldr	r0, .L2
  37 0002 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 0004 00000000 		.word	sensor_instance
  42              		.cfi_endproc
  43              	.LFE137:
  45              		.section	.text.Delay_Microseconds,"ax",%progbits
  46              		.align	1
  47              		.global	Delay_Microseconds
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  52              	Delay_Microseconds:
  53              	.LVL0:
  54              	.LFB138:
  27:Src/module/hcsr04.c ****  
  28:Src/module/hcsr04.c ****  /**
  29:Src/module/hcsr04.c ****   * @brief Génère un délai précis en microsecondes
  30:Src/module/hcsr04.c ****   * @param us Nombre de microsecondes de délai
  31:Src/module/hcsr04.c ****   * @details Utilise le timer TIM1 pour générer un délai précis
  32:Src/module/hcsr04.c ****   */
  33:Src/module/hcsr04.c ****  void Delay_Microseconds(uint32_t us)
  34:Src/module/hcsr04.c ****  {   
  55              		.loc 1 34 2 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  35:Src/module/hcsr04.c ****      __HAL_TIM_SET_COUNTER(&htim1, 0);  // Réinitialiser le compteur
  60              		.loc 1 35 6 view .LVU4
  61 0000 034B     		ldr	r3, .L6
  62 0002 1A68     		ldr	r2, [r3]
  63 0004 0023     		movs	r3, #0
  64 0006 5362     		str	r3, [r2, #36]
  36:Src/module/hcsr04.c ****      while(__HAL_TIM_GET_COUNTER(&htim1) < us); // Attendre le nombre de µs demandé
  65              		.loc 1 36 6 view .LVU5
  66              	.L5:
  67              		.loc 1 36 42 discriminator 1 view .LVU6
  68              		.loc 1 36 12 is_stmt 0 discriminator 1 view .LVU7
  69 0008 536A     		ldr	r3, [r2, #36]
  70              		.loc 1 36 42 discriminator 1 view .LVU8
  71 000a 8342     		cmp	r3, r0
  72 000c FCD3     		bcc	.L5
  37:Src/module/hcsr04.c ****  }
  73              		.loc 1 37 2 view .LVU9
  74 000e 7047     		bx	lr
  75              	.L7:
  76              		.align	2
  77              	.L6:
  78 0010 00000000 		.word	htim1
  79              		.cfi_endproc
  80              	.LFE138:
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 3


  82              		.section	.text.HC_SR04_init,"ax",%progbits
  83              		.align	1
  84              		.global	HC_SR04_init
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  89              	HC_SR04_init:
  90              	.LFB139:
  38:Src/module/hcsr04.c ****  
  39:Src/module/hcsr04.c ****  /**
  40:Src/module/hcsr04.c ****   * @brief Initialise le capteur HC-SR04
  41:Src/module/hcsr04.c ****   * @details Configure les broches GPIO et le timer nécessaires pour le capteur
  42:Src/module/hcsr04.c ****   */
  43:Src/module/hcsr04.c ****  void HC_SR04_init(void) {
  91              		.loc 1 43 26 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 24
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95 0000 70B5     		push	{r4, r5, r6, lr}
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 16
  98              		.cfi_offset 4, -16
  99              		.cfi_offset 5, -12
 100              		.cfi_offset 6, -8
 101              		.cfi_offset 14, -4
 102 0002 86B0     		sub	sp, sp, #24
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 40
  44:Src/module/hcsr04.c ****      // Configuration Trigger (PA8) en sortie
  45:Src/module/hcsr04.c ****      GPIO_InitTypeDef GPIO_InitStruct = {0};
 105              		.loc 1 45 6 view .LVU11
 106              		.loc 1 45 23 is_stmt 0 view .LVU12
 107 0004 01AC     		add	r4, sp, #4
 108 0006 0025     		movs	r5, #0
 109 0008 0195     		str	r5, [sp, #4]
 110 000a 0295     		str	r5, [sp, #8]
 111 000c 0395     		str	r5, [sp, #12]
 112 000e 0495     		str	r5, [sp, #16]
 113 0010 0595     		str	r5, [sp, #20]
  46:Src/module/hcsr04.c ****      GPIO_InitStruct.Pin = GPIO_PIN_8;
 114              		.loc 1 46 6 is_stmt 1 view .LVU13
 115              		.loc 1 46 26 is_stmt 0 view .LVU14
 116 0012 4FF48073 		mov	r3, #256
 117 0016 0193     		str	r3, [sp, #4]
  47:Src/module/hcsr04.c ****      GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 47 6 is_stmt 1 view .LVU15
 119              		.loc 1 47 27 is_stmt 0 view .LVU16
 120 0018 0123     		movs	r3, #1
 121 001a 0293     		str	r3, [sp, #8]
  48:Src/module/hcsr04.c ****      GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 48 6 is_stmt 1 view .LVU17
  49:Src/module/hcsr04.c ****      GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 123              		.loc 1 49 6 view .LVU18
  50:Src/module/hcsr04.c ****      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 124              		.loc 1 50 6 view .LVU19
 125 001c 094E     		ldr	r6, .L10
 126 001e 2146     		mov	r1, r4
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 4


 127 0020 3046     		mov	r0, r6
 128 0022 FFF7FEFF 		bl	HAL_GPIO_Init
 129              	.LVL1:
  51:Src/module/hcsr04.c ****  
  52:Src/module/hcsr04.c ****      // Configuration Echo (PA9) en entrée avec pull-down
  53:Src/module/hcsr04.c ****      GPIO_InitStruct.Pin = GPIO_PIN_9;
 130              		.loc 1 53 6 view .LVU20
 131              		.loc 1 53 26 is_stmt 0 view .LVU21
 132 0026 4FF40073 		mov	r3, #512
 133 002a 0193     		str	r3, [sp, #4]
  54:Src/module/hcsr04.c ****      GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 134              		.loc 1 54 6 is_stmt 1 view .LVU22
 135              		.loc 1 54 27 is_stmt 0 view .LVU23
 136 002c 0295     		str	r5, [sp, #8]
  55:Src/module/hcsr04.c ****      GPIO_InitStruct.Pull = GPIO_PULLDOWN; // Ajout d'un pull-down pour stabiliser le signal
 137              		.loc 1 55 6 is_stmt 1 view .LVU24
 138              		.loc 1 55 27 is_stmt 0 view .LVU25
 139 002e 0223     		movs	r3, #2
 140 0030 0393     		str	r3, [sp, #12]
  56:Src/module/hcsr04.c ****      HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 141              		.loc 1 56 6 is_stmt 1 view .LVU26
 142 0032 2146     		mov	r1, r4
 143 0034 3046     		mov	r0, r6
 144 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 145              	.LVL2:
  57:Src/module/hcsr04.c ****  
  58:Src/module/hcsr04.c ****      // Initialisation du timer pour mesurer le temps
  59:Src/module/hcsr04.c ****      HAL_TIM_Base_Start(&htim1);
 146              		.loc 1 59 6 view .LVU27
 147 003a 0348     		ldr	r0, .L10+4
 148 003c FFF7FEFF 		bl	HAL_TIM_Base_Start
 149              	.LVL3:
  60:Src/module/hcsr04.c ****  }
 150              		.loc 1 60 2 is_stmt 0 view .LVU28
 151 0040 06B0     		add	sp, sp, #24
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 16
 154              		@ sp needed
 155 0042 70BD     		pop	{r4, r5, r6, pc}
 156              	.L11:
 157              		.align	2
 158              	.L10:
 159 0044 00000240 		.word	1073872896
 160 0048 00000000 		.word	htim1
 161              		.cfi_endproc
 162              	.LFE139:
 164              		.section	.text.HC_SR04_get_distance,"ax",%progbits
 165              		.align	1
 166              		.global	HC_SR04_get_distance
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 171              	HC_SR04_get_distance:
 172              	.LVL4:
 173              	.LFB140:
  61:Src/module/hcsr04.c ****  
  62:Src/module/hcsr04.c ****  /**
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 5


  63:Src/module/hcsr04.c ****   * @brief Mesure la distance avec le capteur HC-SR04
  64:Src/module/hcsr04.c ****   * @param sensor Pointeur vers l'instance du capteur HC-SR04
  65:Src/module/hcsr04.c ****   * @return Distance mesurée en centimètres, ou -1.0f en cas d'erreur
  66:Src/module/hcsr04.c ****   * @note La plage valide de mesure est de 5 à 25 cm.
  67:Src/module/hcsr04.c ****   */
  68:Src/module/hcsr04.c ****  float HC_SR04_get_distance(HC_SR04* sensor) {
 174              		.loc 1 68 46 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		.loc 1 68 46 is_stmt 0 view .LVU30
 179 0000 38B5     		push	{r3, r4, r5, lr}
 180              	.LCFI3:
 181              		.cfi_def_cfa_offset 16
 182              		.cfi_offset 3, -16
 183              		.cfi_offset 4, -12
 184              		.cfi_offset 5, -8
 185              		.cfi_offset 14, -4
  69:Src/module/hcsr04.c ****      uint32_t start_time, stop_time;
 186              		.loc 1 69 6 is_stmt 1 view .LVU31
  70:Src/module/hcsr04.c ****  
  71:Src/module/hcsr04.c ****      // Envoi d'une impulsion Trigger de 10 µs
  72:Src/module/hcsr04.c ****      HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 187              		.loc 1 72 6 view .LVU32
 188 0002 2D4C     		ldr	r4, .L25
 189 0004 0122     		movs	r2, #1
 190 0006 4FF48071 		mov	r1, #256
 191 000a 2046     		mov	r0, r4
 192              	.LVL5:
 193              		.loc 1 72 6 is_stmt 0 view .LVU33
 194 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 195              	.LVL6:
  73:Src/module/hcsr04.c ****      Delay_Microseconds(10); // Délai précis en microsecondes
 196              		.loc 1 73 6 is_stmt 1 view .LVU34
 197 0010 0A20     		movs	r0, #10
 198 0012 FFF7FEFF 		bl	Delay_Microseconds
 199              	.LVL7:
  74:Src/module/hcsr04.c ****      HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 200              		.loc 1 74 6 view .LVU35
 201 0016 0022     		movs	r2, #0
 202 0018 4FF48071 		mov	r1, #256
 203 001c 2046     		mov	r0, r4
 204 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 205              	.LVL8:
  75:Src/module/hcsr04.c ****  
  76:Src/module/hcsr04.c ****      // Attendre l'activation de Echo (avec timeout)
  77:Src/module/hcsr04.c ****      uint32_t timeout = HAL_GetTick() + 10; // Timeout de 10 ms
 206              		.loc 1 77 6 view .LVU36
 207              		.loc 1 77 25 is_stmt 0 view .LVU37
 208 0022 FFF7FEFF 		bl	HAL_GetTick
 209              	.LVL9:
 210              		.loc 1 77 15 discriminator 1 view .LVU38
 211 0026 00F10A04 		add	r4, r0, #10
 212              	.LVL10:
  78:Src/module/hcsr04.c ****      while (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9) == GPIO_PIN_RESET) {
 213              		.loc 1 78 6 is_stmt 1 view .LVU39
 214              	.L13:
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 6


 215              		.loc 1 78 49 view .LVU40
 216              		.loc 1 78 13 is_stmt 0 view .LVU41
 217 002a 4FF40071 		mov	r1, #512
 218 002e 2248     		ldr	r0, .L25
 219 0030 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 220              	.LVL11:
 221              		.loc 1 78 49 discriminator 1 view .LVU42
 222 0034 30B9     		cbnz	r0, .L23
  79:Src/module/hcsr04.c ****          if (HAL_GetTick() > timeout) {
 223              		.loc 1 79 10 is_stmt 1 view .LVU43
 224              		.loc 1 79 14 is_stmt 0 view .LVU44
 225 0036 FFF7FEFF 		bl	HAL_GetTick
 226              	.LVL12:
 227              		.loc 1 79 13 discriminator 1 view .LVU45
 228 003a A042     		cmp	r0, r4
 229 003c F5D9     		bls	.L13
  80:Src/module/hcsr04.c ****              return -1.0f; // Timeout, retourner une erreur
 230              		.loc 1 80 21 view .LVU46
 231 003e BFEE000A 		vmov.f32	s0, #-1.0e+0
 232              	.L12:
  81:Src/module/hcsr04.c ****          }
  82:Src/module/hcsr04.c ****      }
  83:Src/module/hcsr04.c ****  
  84:Src/module/hcsr04.c ****      // Capturer le temps de départ
  85:Src/module/hcsr04.c ****      start_time = __HAL_TIM_GET_COUNTER(&htim1);
  86:Src/module/hcsr04.c ****  
  87:Src/module/hcsr04.c ****      // Attendre la fin de l'impulsion Echo (avec timeout)
  88:Src/module/hcsr04.c ****      timeout = HAL_GetTick() + 10; // Timeout de 10 ms
  89:Src/module/hcsr04.c ****      while (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9) == GPIO_PIN_SET) {
  90:Src/module/hcsr04.c ****          if (HAL_GetTick() > timeout) {
  91:Src/module/hcsr04.c ****              return -1.0f; // Timeout, retourner une erreur
  92:Src/module/hcsr04.c ****          }
  93:Src/module/hcsr04.c ****      }
  94:Src/module/hcsr04.c ****  
  95:Src/module/hcsr04.c ****      // Capturer le temps de fin
  96:Src/module/hcsr04.c ****      stop_time = __HAL_TIM_GET_COUNTER(&htim1);
  97:Src/module/hcsr04.c ****  
  98:Src/module/hcsr04.c ****      // Calcul du temps de vol (µs) et distance en cm
  99:Src/module/hcsr04.c ****      uint32_t duration = stop_time - start_time;
 100:Src/module/hcsr04.c ****      float distance = (duration * 0.0343f) / 2.0f;
 101:Src/module/hcsr04.c ****  
 102:Src/module/hcsr04.c ****      // Si hors de la plage 5-25cm, retourner -1 (erreur)
 103:Src/module/hcsr04.c ****      if (distance < 5 || distance > 25) {
 104:Src/module/hcsr04.c ****          return -1.0f;
 105:Src/module/hcsr04.c ****      }
 106:Src/module/hcsr04.c ****  
 107:Src/module/hcsr04.c ****      return distance;
 108:Src/module/hcsr04.c ****  }
 233              		.loc 1 108 2 view .LVU47
 234 0042 38BD     		pop	{r3, r4, r5, pc}
 235              	.LVL13:
 236              	.L23:
  85:Src/module/hcsr04.c ****  
 237              		.loc 1 85 6 is_stmt 1 view .LVU48
  85:Src/module/hcsr04.c ****  
 238              		.loc 1 85 19 is_stmt 0 view .LVU49
 239 0044 1D4B     		ldr	r3, .L25+4
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 7


 240 0046 1B68     		ldr	r3, [r3]
  85:Src/module/hcsr04.c ****  
 241              		.loc 1 85 17 view .LVU50
 242 0048 5D6A     		ldr	r5, [r3, #36]
 243              	.LVL14:
  88:Src/module/hcsr04.c ****      while (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9) == GPIO_PIN_SET) {
 244              		.loc 1 88 6 is_stmt 1 view .LVU51
  88:Src/module/hcsr04.c ****      while (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9) == GPIO_PIN_SET) {
 245              		.loc 1 88 16 is_stmt 0 view .LVU52
 246 004a FFF7FEFF 		bl	HAL_GetTick
 247              	.LVL15:
  88:Src/module/hcsr04.c ****      while (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_9) == GPIO_PIN_SET) {
 248              		.loc 1 88 14 discriminator 1 view .LVU53
 249 004e 00F10A04 		add	r4, r0, #10
 250              	.LVL16:
  89:Src/module/hcsr04.c ****          if (HAL_GetTick() > timeout) {
 251              		.loc 1 89 6 is_stmt 1 view .LVU54
 252              	.L16:
  89:Src/module/hcsr04.c ****          if (HAL_GetTick() > timeout) {
 253              		.loc 1 89 49 view .LVU55
  89:Src/module/hcsr04.c ****          if (HAL_GetTick() > timeout) {
 254              		.loc 1 89 13 is_stmt 0 view .LVU56
 255 0052 4FF40071 		mov	r1, #512
 256 0056 1848     		ldr	r0, .L25
 257 0058 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 258              	.LVL17:
  89:Src/module/hcsr04.c ****          if (HAL_GetTick() > timeout) {
 259              		.loc 1 89 49 discriminator 1 view .LVU57
 260 005c 0128     		cmp	r0, #1
 261 005e 06D1     		bne	.L24
  90:Src/module/hcsr04.c ****              return -1.0f; // Timeout, retourner une erreur
 262              		.loc 1 90 10 is_stmt 1 view .LVU58
  90:Src/module/hcsr04.c ****              return -1.0f; // Timeout, retourner une erreur
 263              		.loc 1 90 14 is_stmt 0 view .LVU59
 264 0060 FFF7FEFF 		bl	HAL_GetTick
 265              	.LVL18:
  90:Src/module/hcsr04.c ****              return -1.0f; // Timeout, retourner une erreur
 266              		.loc 1 90 13 discriminator 1 view .LVU60
 267 0064 A042     		cmp	r0, r4
 268 0066 F4D9     		bls	.L16
  91:Src/module/hcsr04.c ****          }
 269              		.loc 1 91 21 view .LVU61
 270 0068 BFEE000A 		vmov.f32	s0, #-1.0e+0
 271 006c E9E7     		b	.L12
 272              	.L24:
  96:Src/module/hcsr04.c ****  
 273              		.loc 1 96 6 is_stmt 1 view .LVU62
  96:Src/module/hcsr04.c ****  
 274              		.loc 1 96 18 is_stmt 0 view .LVU63
 275 006e 134B     		ldr	r3, .L25+4
 276 0070 1B68     		ldr	r3, [r3]
  96:Src/module/hcsr04.c ****  
 277              		.loc 1 96 16 view .LVU64
 278 0072 5B6A     		ldr	r3, [r3, #36]
 279              	.LVL19:
  99:Src/module/hcsr04.c ****      float distance = (duration * 0.0343f) / 2.0f;
 280              		.loc 1 99 6 is_stmt 1 view .LVU65
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 8


  99:Src/module/hcsr04.c ****      float distance = (duration * 0.0343f) / 2.0f;
 281              		.loc 1 99 15 is_stmt 0 view .LVU66
 282 0074 5B1B     		subs	r3, r3, r5
 283              	.LVL20:
  99:Src/module/hcsr04.c ****      float distance = (duration * 0.0343f) / 2.0f;
 284              		.loc 1 99 15 view .LVU67
 285 0076 00EE103A 		vmov	s0, r3	@ int
 286              	.LVL21:
 100:Src/module/hcsr04.c ****  
 287              		.loc 1 100 6 is_stmt 1 view .LVU68
 100:Src/module/hcsr04.c ****  
 288              		.loc 1 100 33 is_stmt 0 view .LVU69
 289 007a B8EE400A 		vcvt.f32.u32	s0, s0
 290 007e DFED107A 		vldr.32	s15, .L25+8
 291 0082 20EE270A 		vmul.f32	s0, s0, s15
 100:Src/module/hcsr04.c ****  
 292              		.loc 1 100 12 view .LVU70
 293 0086 F6EE007A 		vmov.f32	s15, #5.0e-1
 294 008a 20EE270A 		vmul.f32	s0, s0, s15
 295              	.LVL22:
 103:Src/module/hcsr04.c ****          return -1.0f;
 296              		.loc 1 103 6 is_stmt 1 view .LVU71
 103:Src/module/hcsr04.c ****          return -1.0f;
 297              		.loc 1 103 9 is_stmt 0 view .LVU72
 298 008e F1EE047A 		vmov.f32	s15, #5.0e+0
 299 0092 B4EEE70A 		vcmpe.f32	s0, s15
 300 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 301 009a 09D4     		bmi	.L20
 103:Src/module/hcsr04.c ****          return -1.0f;
 302              		.loc 1 103 23 discriminator 1 view .LVU73
 303 009c F3EE097A 		vmov.f32	s15, #2.5e+1
 304 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 305 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 306 00a8 CBDD     		ble	.L12
 104:Src/module/hcsr04.c ****      }
 307              		.loc 1 104 17 view .LVU74
 308 00aa BFEE000A 		vmov.f32	s0, #-1.0e+0
 309              	.LVL23:
 104:Src/module/hcsr04.c ****      }
 310              		.loc 1 104 17 view .LVU75
 311 00ae C8E7     		b	.L12
 312              	.LVL24:
 313              	.L20:
 104:Src/module/hcsr04.c ****      }
 314              		.loc 1 104 17 view .LVU76
 315 00b0 BFEE000A 		vmov.f32	s0, #-1.0e+0
 316              	.LVL25:
 104:Src/module/hcsr04.c ****      }
 317              		.loc 1 104 17 view .LVU77
 318 00b4 C5E7     		b	.L12
 319              	.L26:
 320 00b6 00BF     		.align	2
 321              	.L25:
 322 00b8 00000240 		.word	1073872896
 323 00bc 00000000 		.word	htim1
 324 00c0 287E0C3D 		.word	1024228904
 325              		.cfi_endproc
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 9


 326              	.LFE140:
 328              		.section	.rodata.HC_SR04_update.str1.4,"aMS",%progbits,1
 329              		.align	2
 330              	.LC0:
 331 0000 44697374 		.ascii	"Distance: %.2f cm\000"
 331      616E6365 
 331      3A20252E 
 331      32662063 
 331      6D00
 332 0012 0000     		.align	2
 333              	.LC1:
 334 0014 44697374 		.ascii	"Distance hors plage (%lu)\000"
 334      616E6365 
 334      20686F72 
 334      7320706C 
 334      61676520 
 335              		.section	.text.HC_SR04_update,"ax",%progbits
 336              		.align	1
 337              		.global	HC_SR04_update
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	HC_SR04_update:
 343              	.LVL26:
 344              	.LFB141:
 109:Src/module/hcsr04.c ****  
 110:Src/module/hcsr04.c ****  /**
 111:Src/module/hcsr04.c ****   * @brief Met à jour périodiquement la distance mesurée par le capteur
 112:Src/module/hcsr04.c ****   * @param sensor Pointeur vers l'instance du capteur HC-SR04
 113:Src/module/hcsr04.c ****   * @param mode Mode d'opération (1 pour activer les mises à jour périodiques)
 114:Src/module/hcsr04.c ****   * @details Cette fonction effectue une mesure toutes les 250ms lorsque mode=1, 
 115:Src/module/hcsr04.c ****   * met à jour les LEDs d'état et envoie la distance via UART
 116:Src/module/hcsr04.c ****   */
 117:Src/module/hcsr04.c ****  void HC_SR04_update(HC_SR04* sensor, int mode) {
 345              		.loc 1 117 49 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 32
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 118:Src/module/hcsr04.c ****      if (mode == 1) {
 349              		.loc 1 118 6 view .LVU79
 350              		.loc 1 118 9 is_stmt 0 view .LVU80
 351 0000 0129     		cmp	r1, #1
 352 0002 00D0     		beq	.L39
 353 0004 7047     		bx	lr
 354              	.L39:
 117:Src/module/hcsr04.c ****      if (mode == 1) {
 355              		.loc 1 117 49 view .LVU81
 356 0006 10B5     		push	{r4, lr}
 357              	.LCFI4:
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 4, -8
 360              		.cfi_offset 14, -4
 361 0008 88B0     		sub	sp, sp, #32
 362              	.LCFI5:
 363              		.cfi_def_cfa_offset 40
 364 000a 0446     		mov	r4, r0
 365              	.LBB2:
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 10


 119:Src/module/hcsr04.c ****          static uint32_t last_update = 0;
 366              		.loc 1 119 10 is_stmt 1 view .LVU82
 120:Src/module/hcsr04.c ****          uint32_t current_time = HAL_GetTick();
 367              		.loc 1 120 10 view .LVU83
 368              		.loc 1 120 34 is_stmt 0 view .LVU84
 369 000c FFF7FEFF 		bl	HAL_GetTick
 370              	.LVL27:
 121:Src/module/hcsr04.c ****          
 122:Src/module/hcsr04.c ****          if (current_time - last_update >= 250) {
 371              		.loc 1 122 10 is_stmt 1 view .LVU85
 372              		.loc 1 122 27 is_stmt 0 view .LVU86
 373 0010 274B     		ldr	r3, .L42
 374 0012 1B68     		ldr	r3, [r3]
 375 0014 C31A     		subs	r3, r0, r3
 376              		.loc 1 122 13 view .LVU87
 377 0016 F92B     		cmp	r3, #249
 378 0018 01D8     		bhi	.L40
 379              	.LVL28:
 380              	.L27:
 381              		.loc 1 122 13 view .LVU88
 382              	.LBE2:
 123:Src/module/hcsr04.c ****              // Force la mise à jour de last_update
 124:Src/module/hcsr04.c ****              last_update = current_time;
 125:Src/module/hcsr04.c ****              
 126:Src/module/hcsr04.c ****              // Mettre à jour la distance mesurée
 127:Src/module/hcsr04.c ****              sensor->distance = HC_SR04_get_distance(sensor);
 128:Src/module/hcsr04.c ****              
 129:Src/module/hcsr04.c ****              // Envoyer la distance via UART
 130:Src/module/hcsr04.c ****              char message[32];
 131:Src/module/hcsr04.c ****              if (sensor->distance >= 5 && sensor->distance <= 25) {
 132:Src/module/hcsr04.c ****                  sprintf(message, "Distance: %.2f cm", sensor->distance);
 133:Src/module/hcsr04.c ****                  sendMessage(message);
 134:Src/module/hcsr04.c ****                  
 135:Src/module/hcsr04.c ****                  // Indiquer l'état avec les LEDs
 136:Src/module/hcsr04.c ****                  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);   // LED ORANGE ON
 137:Src/module/hcsr04.c ****                  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET); // LED ROUGE OFF
 138:Src/module/hcsr04.c ****              } else {
 139:Src/module/hcsr04.c ****                  // Ajoutez un compteur pour voir si cette section est exécutée plusieurs fois
 140:Src/module/hcsr04.c ****                  static uint32_t error_count = 0;
 141:Src/module/hcsr04.c ****                  sprintf(message, "Distance hors plage (%lu)", ++error_count);
 142:Src/module/hcsr04.c ****                  sendMessage(message);
 143:Src/module/hcsr04.c ****                  
 144:Src/module/hcsr04.c ****                  // LEDs pour indiquer erreur
 145:Src/module/hcsr04.c ****                  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET); // LED ORANGE OFF
 146:Src/module/hcsr04.c ****                  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);   // LED ROUGE ON
 147:Src/module/hcsr04.c ****              }
 148:Src/module/hcsr04.c ****          }
 149:Src/module/hcsr04.c ****      }
 150:Src/module/hcsr04.c ****  }
 383              		.loc 1 150 2 view .LVU89
 384 001a 08B0     		add	sp, sp, #32
 385              	.LCFI6:
 386              		.cfi_remember_state
 387              		.cfi_def_cfa_offset 8
 388              		@ sp needed
 389 001c 10BD     		pop	{r4, pc}
 390              	.LVL29:
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 11


 391              	.L40:
 392              	.LCFI7:
 393              		.cfi_restore_state
 394              	.LBB6:
 395              	.LBB3:
 124:Src/module/hcsr04.c ****              
 396              		.loc 1 124 14 is_stmt 1 view .LVU90
 124:Src/module/hcsr04.c ****              
 397              		.loc 1 124 26 is_stmt 0 view .LVU91
 398 001e 244B     		ldr	r3, .L42
 399 0020 1860     		str	r0, [r3]
 127:Src/module/hcsr04.c ****              
 400              		.loc 1 127 14 is_stmt 1 view .LVU92
 127:Src/module/hcsr04.c ****              
 401              		.loc 1 127 33 is_stmt 0 view .LVU93
 402 0022 2046     		mov	r0, r4
 403              	.LVL30:
 127:Src/module/hcsr04.c ****              
 404              		.loc 1 127 33 view .LVU94
 405 0024 FFF7FEFF 		bl	HC_SR04_get_distance
 406              	.LVL31:
 127:Src/module/hcsr04.c ****              
 407              		.loc 1 127 31 discriminator 1 view .LVU95
 408 0028 84ED050A 		vstr.32	s0, [r4, #20]
 130:Src/module/hcsr04.c ****              if (sensor->distance >= 5 && sensor->distance <= 25) {
 409              		.loc 1 130 14 is_stmt 1 view .LVU96
 131:Src/module/hcsr04.c ****                  sprintf(message, "Distance: %.2f cm", sensor->distance);
 410              		.loc 1 131 14 view .LVU97
 131:Src/module/hcsr04.c ****                  sprintf(message, "Distance: %.2f cm", sensor->distance);
 411              		.loc 1 131 17 is_stmt 0 view .LVU98
 412 002c F1EE047A 		vmov.f32	s15, #5.0e+0
 413 0030 B4EEE70A 		vcmpe.f32	s0, s15
 414 0034 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 415 0038 06DB     		blt	.L29
 131:Src/module/hcsr04.c ****                  sprintf(message, "Distance: %.2f cm", sensor->distance);
 416              		.loc 1 131 40 discriminator 1 view .LVU99
 417 003a F3EE097A 		vmov.f32	s15, #2.5e+1
 418 003e B4EEE70A 		vcmpe.f32	s0, s15
 419 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 420 0046 18D9     		bls	.L41
 421              	.L29:
 422              	.LBB4:
 140:Src/module/hcsr04.c ****                  sprintf(message, "Distance hors plage (%lu)", ++error_count);
 423              		.loc 1 140 18 is_stmt 1 view .LVU100
 141:Src/module/hcsr04.c ****                  sendMessage(message);
 424              		.loc 1 141 18 view .LVU101
 425 0048 1A4B     		ldr	r3, .L42+4
 426 004a 1A68     		ldr	r2, [r3]
 427 004c 0132     		adds	r2, r2, #1
 428 004e 1A60     		str	r2, [r3]
 429 0050 1949     		ldr	r1, .L42+8
 430 0052 6846     		mov	r0, sp
 431 0054 FFF7FEFF 		bl	sprintf
 432              	.LVL32:
 142:Src/module/hcsr04.c ****                  
 433              		.loc 1 142 18 view .LVU102
 434 0058 6846     		mov	r0, sp
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 12


 435 005a FFF7FEFF 		bl	sendMessage
 436              	.LVL33:
 145:Src/module/hcsr04.c ****                  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);   // LED ROUGE ON
 437              		.loc 1 145 18 view .LVU103
 438 005e 174C     		ldr	r4, .L42+12
 439              	.LVL34:
 145:Src/module/hcsr04.c ****                  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);   // LED ROUGE ON
 440              		.loc 1 145 18 is_stmt 0 view .LVU104
 441 0060 0022     		movs	r2, #0
 442 0062 4FF40051 		mov	r1, #8192
 443 0066 2046     		mov	r0, r4
 444 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 445              	.LVL35:
 146:Src/module/hcsr04.c ****              }
 446              		.loc 1 146 18 is_stmt 1 view .LVU105
 447 006c 0122     		movs	r2, #1
 448 006e 4FF48041 		mov	r1, #16384
 449 0072 2046     		mov	r0, r4
 450 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 451              	.LVL36:
 452              	.LBE4:
 453              	.LBE3:
 454              	.LBE6:
 455              		.loc 1 150 2 is_stmt 0 view .LVU106
 456 0078 CFE7     		b	.L27
 457              	.LVL37:
 458              	.L41:
 459              	.LBB7:
 460              	.LBB5:
 132:Src/module/hcsr04.c ****                  sendMessage(message);
 461              		.loc 1 132 18 is_stmt 1 view .LVU107
 462 007a 10EE100A 		vmov	r0, s0
 463 007e FFF7FEFF 		bl	__aeabi_f2d
 464              	.LVL38:
 465 0082 0246     		mov	r2, r0
 466 0084 0B46     		mov	r3, r1
 467 0086 0E49     		ldr	r1, .L42+16
 468 0088 6846     		mov	r0, sp
 469 008a FFF7FEFF 		bl	sprintf
 470              	.LVL39:
 133:Src/module/hcsr04.c ****                  
 471              		.loc 1 133 18 view .LVU108
 472 008e 6846     		mov	r0, sp
 473 0090 FFF7FEFF 		bl	sendMessage
 474              	.LVL40:
 136:Src/module/hcsr04.c ****                  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET); // LED ROUGE OFF
 475              		.loc 1 136 18 view .LVU109
 476 0094 094C     		ldr	r4, .L42+12
 477              	.LVL41:
 136:Src/module/hcsr04.c ****                  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET); // LED ROUGE OFF
 478              		.loc 1 136 18 is_stmt 0 view .LVU110
 479 0096 0122     		movs	r2, #1
 480 0098 4FF40051 		mov	r1, #8192
 481 009c 2046     		mov	r0, r4
 482 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 483              	.LVL42:
 137:Src/module/hcsr04.c ****              } else {
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 13


 484              		.loc 1 137 18 is_stmt 1 view .LVU111
 485 00a2 0022     		movs	r2, #0
 486 00a4 4FF48041 		mov	r1, #16384
 487 00a8 2046     		mov	r0, r4
 488 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 489              	.LVL43:
 490 00ae B4E7     		b	.L27
 491              	.L43:
 492              		.align	2
 493              	.L42:
 494 00b0 00000000 		.word	last_update.1
 495 00b4 00000000 		.word	error_count.0
 496 00b8 14000000 		.word	.LC1
 497 00bc 000C0240 		.word	1073875968
 498 00c0 00000000 		.word	.LC0
 499              	.LBE5:
 500              	.LBE7:
 501              		.cfi_endproc
 502              	.LFE141:
 504              		.section	.rodata.HC_SR04_Demo.str1.4,"aMS",%progbits,1
 505              		.align	2
 506              	.LC2:
 507 0000 54657374 		.ascii	"Testing HC-SR04 sensor... for 5 seconds\000"
 507      696E6720 
 507      48432D53 
 507      52303420 
 507      73656E73 
 508              		.align	2
 509              	.LC3:
 510 0028 48432D53 		.ascii	"HC-SR04 Demo ended perfectly.\000"
 510      52303420 
 510      44656D6F 
 510      20656E64 
 510      65642070 
 511              		.section	.text.HC_SR04_Demo,"ax",%progbits
 512              		.align	1
 513              		.global	HC_SR04_Demo
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 518              	HC_SR04_Demo:
 519              	.LFB142:
 151:Src/module/hcsr04.c **** 
 152:Src/module/hcsr04.c ****   /**
 153:Src/module/hcsr04.c ****  * @brief Fonction de démonstration simple pour tester le capteur HC-SR04
 154:Src/module/hcsr04.c ****  * @details Cette fonction mesure la distance et utilise les LEDs pour indiquer
 155:Src/module/hcsr04.c ****  *          si la distance est valide ou hors plage.
 156:Src/module/hcsr04.c ****  */
 157:Src/module/hcsr04.c **** /**
 158:Src/module/hcsr04.c ****  * @brief Fonction de démonstration pour tester le capteur HC-SR04
 159:Src/module/hcsr04.c ****  * @details Cette fonction mesure la distance pendant quelques secondes et utilise les LEDs pour in
 160:Src/module/hcsr04.c ****  *          si la distance est valide ou hors plage.
 161:Src/module/hcsr04.c ****  */
 162:Src/module/hcsr04.c **** void HC_SR04_Demo(void) {
 520              		.loc 1 162 25 view -0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 14


 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524 0000 70B5     		push	{r4, r5, r6, lr}
 525              	.LCFI8:
 526              		.cfi_def_cfa_offset 16
 527              		.cfi_offset 4, -16
 528              		.cfi_offset 5, -12
 529              		.cfi_offset 6, -8
 530              		.cfi_offset 14, -4
 531 0002 2DED028B 		vpush.64	{d8}
 532              	.LCFI9:
 533              		.cfi_def_cfa_offset 24
 534              		.cfi_offset 80, -24
 535              		.cfi_offset 81, -20
 536 0006 88B0     		sub	sp, sp, #32
 537              	.LCFI10:
 538              		.cfi_def_cfa_offset 56
 163:Src/module/hcsr04.c ****     HC_SR04* sensor = HC_SR04_get_instance(); // Obtenir l'instance du capteur
 539              		.loc 1 163 5 view .LVU113
 540              		.loc 1 163 23 is_stmt 0 view .LVU114
 541 0008 FFF7FEFF 		bl	HC_SR04_get_instance
 542              	.LVL44:
 543 000c 0646     		mov	r6, r0
 544              	.LVL45:
 164:Src/module/hcsr04.c ****     
 165:Src/module/hcsr04.c ****     // Afficher un message d'information
 166:Src/module/hcsr04.c ****     sendMessage("Testing HC-SR04 sensor... for 5 seconds");
 545              		.loc 1 166 5 is_stmt 1 view .LVU115
 546 000e 2948     		ldr	r0, .L55
 547              	.LVL46:
 548              		.loc 1 166 5 is_stmt 0 view .LVU116
 549 0010 FFF7FEFF 		bl	sendMessage
 550              	.LVL47:
 167:Src/module/hcsr04.c ****     
 168:Src/module/hcsr04.c ****     // Mesurer la distance pendant 5 secondes (5000ms / 250ms = 20 mesures)
 169:Src/module/hcsr04.c ****     uint32_t endTime = HAL_GetTick() + 5000;
 551              		.loc 1 169 5 is_stmt 1 view .LVU117
 552              		.loc 1 169 24 is_stmt 0 view .LVU118
 553 0014 FFF7FEFF 		bl	HAL_GetTick
 554              	.LVL48:
 555              		.loc 1 169 14 discriminator 1 view .LVU119
 556 0018 00F59C55 		add	r5, r0, #4992
 557 001c 0835     		adds	r5, r5, #8
 558              	.LVL49:
 170:Src/module/hcsr04.c ****     
 171:Src/module/hcsr04.c ****     while (HAL_GetTick() < endTime) {
 559              		.loc 1 171 5 is_stmt 1 view .LVU120
 560              		.loc 1 171 11 is_stmt 0 view .LVU121
 561 001e 0FE0     		b	.L45
 562              	.LVL50:
 563              	.L46:
 564              	.LBB8:
 172:Src/module/hcsr04.c ****         // Mesurer la distance
 173:Src/module/hcsr04.c ****         float distance = HC_SR04_get_distance(sensor);
 174:Src/module/hcsr04.c ****         
 175:Src/module/hcsr04.c ****         // Afficher la distance
 176:Src/module/hcsr04.c ****         char message[32];
 177:Src/module/hcsr04.c ****         sprintf(message, "Distance: %.2f cm", distance);
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 15


 178:Src/module/hcsr04.c ****         sendMessage(message);
 179:Src/module/hcsr04.c **** 
 180:Src/module/hcsr04.c ****         // Vérifier si la distance est valide
 181:Src/module/hcsr04.c ****         if (distance >= 5.0f && distance <= 25.0f) {
 182:Src/module/hcsr04.c ****             // Distance valide : LED Orange ON, LED Rouge OFF
 183:Src/module/hcsr04.c ****             HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);   
 184:Src/module/hcsr04.c ****             HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET); 
 185:Src/module/hcsr04.c ****         } else {
 186:Src/module/hcsr04.c ****             // Distance hors plage ou erreur : LED Rouge ON, LED Orange OFF
 187:Src/module/hcsr04.c ****             HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET); 
 565              		.loc 1 187 13 is_stmt 1 view .LVU122
 566 0020 254C     		ldr	r4, .L55+4
 567 0022 0022     		movs	r2, #0
 568 0024 4FF40051 		mov	r1, #8192
 569 0028 2046     		mov	r0, r4
 570 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 571              	.LVL51:
 188:Src/module/hcsr04.c ****             HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET); 
 572              		.loc 1 188 13 view .LVU123
 573 002e 0122     		movs	r2, #1
 574 0030 4FF48041 		mov	r1, #16384
 575 0034 2046     		mov	r0, r4
 576 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 577              	.LVL52:
 578              	.L49:
 189:Src/module/hcsr04.c ****         }
 190:Src/module/hcsr04.c ****         HAL_Delay(250);
 579              		.loc 1 190 9 view .LVU124
 580 003a FA20     		movs	r0, #250
 581 003c FFF7FEFF 		bl	HAL_Delay
 582              	.LVL53:
 583              	.L45:
 584              		.loc 1 190 9 is_stmt 0 view .LVU125
 585              	.LBE8:
 171:Src/module/hcsr04.c ****         // Mesurer la distance
 586              		.loc 1 171 26 is_stmt 1 view .LVU126
 171:Src/module/hcsr04.c ****         // Mesurer la distance
 587              		.loc 1 171 12 is_stmt 0 view .LVU127
 588 0040 FFF7FEFF 		bl	HAL_GetTick
 589              	.LVL54:
 171:Src/module/hcsr04.c ****         // Mesurer la distance
 590              		.loc 1 171 26 discriminator 1 view .LVU128
 591 0044 A842     		cmp	r0, r5
 592 0046 2DD2     		bcs	.L54
 593              	.LBB9:
 173:Src/module/hcsr04.c ****         
 594              		.loc 1 173 9 is_stmt 1 view .LVU129
 173:Src/module/hcsr04.c ****         
 595              		.loc 1 173 26 is_stmt 0 view .LVU130
 596 0048 3046     		mov	r0, r6
 597 004a FFF7FEFF 		bl	HC_SR04_get_distance
 598              	.LVL55:
 599 004e B0EE408A 		vmov.f32	s16, s0
 600              	.LVL56:
 176:Src/module/hcsr04.c ****         sprintf(message, "Distance: %.2f cm", distance);
 601              		.loc 1 176 9 is_stmt 1 view .LVU131
 177:Src/module/hcsr04.c ****         sendMessage(message);
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 16


 602              		.loc 1 177 9 view .LVU132
 603 0052 10EE100A 		vmov	r0, s0
 604 0056 FFF7FEFF 		bl	__aeabi_f2d
 605              	.LVL57:
 177:Src/module/hcsr04.c ****         sendMessage(message);
 606              		.loc 1 177 9 is_stmt 0 view .LVU133
 607 005a 0246     		mov	r2, r0
 608 005c 0B46     		mov	r3, r1
 609 005e 1749     		ldr	r1, .L55+8
 610 0060 6846     		mov	r0, sp
 611 0062 FFF7FEFF 		bl	sprintf
 612              	.LVL58:
 178:Src/module/hcsr04.c **** 
 613              		.loc 1 178 9 is_stmt 1 view .LVU134
 614 0066 6846     		mov	r0, sp
 615 0068 FFF7FEFF 		bl	sendMessage
 616              	.LVL59:
 181:Src/module/hcsr04.c ****             // Distance valide : LED Orange ON, LED Rouge OFF
 617              		.loc 1 181 9 view .LVU135
 181:Src/module/hcsr04.c ****             // Distance valide : LED Orange ON, LED Rouge OFF
 618              		.loc 1 181 12 is_stmt 0 view .LVU136
 619 006c F1EE047A 		vmov.f32	s15, #5.0e+0
 620 0070 B4EEE78A 		vcmpe.f32	s16, s15
 621 0074 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 622 0078 D2DB     		blt	.L46
 181:Src/module/hcsr04.c ****             // Distance valide : LED Orange ON, LED Rouge OFF
 623              		.loc 1 181 30 discriminator 1 view .LVU137
 624 007a F3EE097A 		vmov.f32	s15, #2.5e+1
 625 007e B4EEE78A 		vcmpe.f32	s16, s15
 626 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 627 0086 CBD8     		bhi	.L46
 183:Src/module/hcsr04.c ****             HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET); 
 628              		.loc 1 183 13 is_stmt 1 view .LVU138
 629 0088 0B4C     		ldr	r4, .L55+4
 630 008a 0122     		movs	r2, #1
 631 008c 4FF40051 		mov	r1, #8192
 632 0090 2046     		mov	r0, r4
 633 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 634              	.LVL60:
 184:Src/module/hcsr04.c ****         } else {
 635              		.loc 1 184 13 view .LVU139
 636 0096 0022     		movs	r2, #0
 637 0098 4FF48041 		mov	r1, #16384
 638 009c 2046     		mov	r0, r4
 639 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 640              	.LVL61:
 641 00a2 CAE7     		b	.L49
 642              	.LVL62:
 643              	.L54:
 184:Src/module/hcsr04.c ****         } else {
 644              		.loc 1 184 13 is_stmt 0 view .LVU140
 645              	.LBE9:
 191:Src/module/hcsr04.c ****     }
 192:Src/module/hcsr04.c ****     
 193:Src/module/hcsr04.c ****     sendMessage("HC-SR04 Demo ended perfectly.");
 646              		.loc 1 193 5 is_stmt 1 view .LVU141
 647 00a4 0648     		ldr	r0, .L55+12
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 17


 648 00a6 FFF7FEFF 		bl	sendMessage
 649              	.LVL63:
 194:Src/module/hcsr04.c **** }...
 650              		.loc 1 194 1 is_stmt 0 view .LVU142
 651 00aa 08B0     		add	sp, sp, #32
 652              	.LCFI11:
 653              		.cfi_def_cfa_offset 24
 654              		@ sp needed
 655 00ac BDEC028B 		vldm	sp!, {d8}
 656              	.LCFI12:
 657              		.cfi_restore 80
 658              		.cfi_restore 81
 659              		.cfi_def_cfa_offset 16
 660 00b0 70BD     		pop	{r4, r5, r6, pc}
 661              	.LVL64:
 662              	.L56:
 663              		.loc 1 194 1 view .LVU143
 664 00b2 00BF     		.align	2
 665              	.L55:
 666 00b4 00000000 		.word	.LC2
 667 00b8 000C0240 		.word	1073875968
 668 00bc 00000000 		.word	.LC0
 669 00c0 28000000 		.word	.LC3
 670              		.cfi_endproc
 671              	.LFE142:
 673              		.section	.bss.error_count.0,"aw",%nobits
 674              		.align	2
 677              	error_count.0:
 678 0000 00000000 		.space	4
 679              		.section	.bss.last_update.1,"aw",%nobits
 680              		.align	2
 683              	last_update.1:
 684 0000 00000000 		.space	4
 685              		.section	.bss.sensor_instance,"aw",%nobits
 686              		.align	2
 689              	sensor_instance:
 690 0000 00000000 		.space	24
 690      00000000 
 690      00000000 
 690      00000000 
 690      00000000 
 691              		.text
 692              	.Letext0:
 693              		.file 2 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 694              		.file 3 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 695              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 696              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 697              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 698              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 699              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 700              		.file 9 "Src/module/hcsr04.h"
 701              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 702              		.file 11 "Src/module/usart_comm.h"
 703              		.file 12 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 704              		.file 13 "Inc/tim.h"
ARM GAS  /var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 hcsr04.c
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:21     .text.HC_SR04_get_instance:00000000 $t
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:27     .text.HC_SR04_get_instance:00000000 HC_SR04_get_instance
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:41     .text.HC_SR04_get_instance:00000004 $d
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:689    .bss.sensor_instance:00000000 sensor_instance
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:46     .text.Delay_Microseconds:00000000 $t
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:52     .text.Delay_Microseconds:00000000 Delay_Microseconds
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:78     .text.Delay_Microseconds:00000010 $d
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:83     .text.HC_SR04_init:00000000 $t
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:89     .text.HC_SR04_init:00000000 HC_SR04_init
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:159    .text.HC_SR04_init:00000044 $d
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:165    .text.HC_SR04_get_distance:00000000 $t
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:171    .text.HC_SR04_get_distance:00000000 HC_SR04_get_distance
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:322    .text.HC_SR04_get_distance:000000b8 $d
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:329    .rodata.HC_SR04_update.str1.4:00000000 $d
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:336    .text.HC_SR04_update:00000000 $t
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:342    .text.HC_SR04_update:00000000 HC_SR04_update
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:494    .text.HC_SR04_update:000000b0 $d
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:683    .bss.last_update.1:00000000 last_update.1
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:677    .bss.error_count.0:00000000 error_count.0
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:505    .rodata.HC_SR04_Demo.str1.4:00000000 $d
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:512    .text.HC_SR04_Demo:00000000 $t
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:518    .text.HC_SR04_Demo:00000000 HC_SR04_Demo
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:666    .text.HC_SR04_Demo:000000b4 $d
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:674    .bss.error_count.0:00000000 $d
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:680    .bss.last_update.1:00000000 $d
/var/folders/yr/v27j6cl917jdx7ksvb_6h6k00000gn/T//ccP9qP4e.s:686    .bss.sensor_instance:00000000 $d

UNDEFINED SYMBOLS
htim1
HAL_GPIO_Init
HAL_TIM_Base_Start
HAL_GPIO_WritePin
HAL_GetTick
HAL_GPIO_ReadPin
sprintf
sendMessage
__aeabi_f2d
HAL_Delay
